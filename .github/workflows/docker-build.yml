name: docker-build

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

env:
  REPO: "sealio"
  BUILD_PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  build-and-push:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0
          platforms: "arm64"

      - name: Set Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login Dockerhub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_PASSWORD }}

      - name: Get Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REPO }}/terraform-deployer

      - name: Package
        id: package
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          tags: ${{ steps.metadata.outputs.tags }}
          platforms: ${{ env.BUILD_PLATFORMS }}
          cache-from: |
            type=registry,ref=${{ env.REPO }}/build-cache:terraform-deployer${{ startsWith(github.ref, 'refs/tags/') && '-release' || '' }}
          cache-to: |
            ${{ github.event_name != 'pull_request' && format('type=registry,mode=max,oci-mediatypes=false,compression=gzip,ref={0}/build-cache:terraform-deployer{1},ignore-error=true', env.REPO, startsWith(github.ref, 'refs/tags/') && '-release' || '') || '' }}
          no-cache-filters: |
            ${{ startsWith(github.ref, 'refs/tags/') && 'fetch' || '' }}
      
      - name: Setup Cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: v2.0.0
  
      - name: Prove
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          set -euo pipefail

          # login
          cosign login "docker.io" -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"

          # prove
          curl -o slsa-generator --retry 3 --retry-all-errors --retry-delay 3 -sSfL \
            "https://github.com/slsa-framework/slsa-github-generator/releases/download/${SLSA_GITHUB_GENERATOR_VERSION}/${SLSA_GITHUB_GENERATOR}"
          chmod a+x slsa-generator
          predicate_name="predicate.json"
          ./slsa-generator generate --predicate="${predicate_name}"
          cosign attest --predicate="${predicate_name}" \
            --type slsaprovenance \
            --yes \
            "${UNTRUSTED_IMAGE}@${UNTRUSTED_DIGEST}"
        env:
          COSIGN_EXPERIMENTAL: "1"
          SLSA_GITHUB_GENERATOR: "slsa-generator-container-linux-amd64"
          SLSA_GITHUB_GENERATOR_VERSION: "v1.5.0"
          GITHUB_CONTEXT: "${{ toJSON(github) }}"
          UNTRUSTED_IMAGE: "${{ env.REPO }}/terraform-deployer"
          UNTRUSTED_DIGEST: "${{ steps.package.outputs.digest }}"
          DOCKERHUB_USERNAME: "${{ secrets.CI_DOCKERHUB_USERNAME }}"
          DOCKERHUB_PASSWORD: "${{ secrets.CI_DOCKERHUB_PASSWORD }}"
        continue-on-error: true
